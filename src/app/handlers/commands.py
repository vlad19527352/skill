from __future__ import annotations

import logging
from telegram import Update
from telegram.ext import ContextTypes

from ..services.perplexity_client import PerplexityClient
from ..services.prompts import build_messages
from ..services.text_shaper import shape_to_window, prettify_answer
from ..utils.tracing import generate_request_id
from ..utils.validators import validate_user_text


log = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
	await update.message.reply_text(
		"–ü—Ä–∏–≤–µ—Ç! –Ø –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –±–æ—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ Perplexity. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∫–æ–º–∞–Ω–¥–æ–π /post –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ–º. üòä"
	)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
	await update.message.reply_text(
		"–ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /post <–≤–æ–ø—Ä–æ—Å> –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç. "
		"–û—Ç–≤–µ—Ç—ã 500‚Äì700 —Å–∏–º–≤–æ–ª–æ–≤. –ü–∏—à–∏—Ç–µ –ø–æ —Ç–µ–º–µ, —è –æ—Ç–≤–µ—á—É –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É!"
	)


async def post_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
	request_id = generate_request_id()
	user_text_raw = (update.message.text or "").replace("/post", "", 1).strip()
	try:
		user_text = validate_user_text(user_text_raw)
	except Exception as exc:
		await update.message.reply_text(str(exc))
		return

	client: PerplexityClient = context.bot_data.get("perplexity_client")
	if client is None:
		# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ (–Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞)
		from ..config import from_env
		from ..services.perplexity_client import PerplexityClient as _PC
		cfg = from_env()
		client = _PC(cfg)
		context.bot_data["perplexity_client"] = client

	messages = build_messages(user_text)
	try:
		answer = await client.ask(messages)
		answer = shape_to_window(answer)
		answer = prettify_answer(answer)
		await update.message.reply_text(answer)
	except Exception as exc:
		log.exception("post_command failed", extra={"ctx_request_id": request_id})
		await update.message.reply_text(
			"–û–π, –≤–æ–∑–Ω–∏–∫–ª–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Perplexity. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ —á—É—Ç—å –ø–æ–∑–∂–µ?"
		)


